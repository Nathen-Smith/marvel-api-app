{"version":3,"sources":["api/constants.ts","api/apiUtils.ts","components/List.tsx","components/Gallery.tsx","App.tsx","index.tsx"],"names":["baseURL","publicKeyParam","getCharsByComicUtil","selections","a","charParam","length","console","log","toString","axios","get","res","data","results","searchComicsUtil","input","selection","asc","List","updateComicsData","useState","setInput","setSort","setAsc","setData","location","useHistory","useEffect","getData","className","htmlFor","id","type","onChange","e","target","value","xmlns","viewBox","d","map","comic","idx","onClick","push","src","thumbnail","path","extension","alt","title","dates","date","Gallery","name","active","options","setOptions","activeSelections","setActiveSelections","loading","setLoading","Array","len","option","index","newArr","updateFieldChanged","classNames","aria-current","undefined","style","color","textAlign","CircularProgress","to","classes","filter","Boolean","join","App","current","navigation","setNavigation","useCallback","as","open","Button","aria-hidden","item","Panel","description","characters","returned","charList","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.359d5002.chunk.js","sourcesContent":["export const baseURL = \"https://gateway.marvel.com\";\nexport const publicKeyParam = \"apikey=f19ff79f771f6dbda0e1367ba52ffd54\";\n","import axios from \"axios\";\nimport { baseURL, publicKeyParam } from \"./constants\";\n\nexport interface ComicsData {\n  id: number;\n  title: string;\n  description: string;\n  pageCount: number;\n  thumbnail: {\n    extension: string;\n    path: string;\n  };\n  characters: {\n    returned: number;\n    items: [{ name: string; role: string }];\n  };\n  modified: string;\n  dates: [{ date: string; type: string }];\n}\n\ninterface ComicsRes {\n  data: {\n    count: number;\n    limit: number;\n    offset: number;\n    results: ComicsData[];\n    total: number;\n  };\n}\n\nexport const getCharsByComicUtil = async (selections: string[]) => {\n  try {\n    let charParam = \"characters\";\n    if (selections.length === 0) {\n      return null;\n    } else if (selections.length > 1) {\n      charParam = \"sharedAppearances\";\n    }\n    console.log(selections.toString());\n\n    const res = await axios.get<ComicsRes>(\n      `${baseURL}/v1/public/comics?${charParam}=${selections.toString()}&limit=15&${publicKeyParam}`\n    );\n    console.log(res.data);\n    return res.data.data.results;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport const searchComicsUtil = async (\n  input: string,\n  selection: string,\n  asc: boolean\n) => {\n  try {\n    const res = await axios.get<ComicsRes>(\n      `${baseURL}/v1/public/comics?titleStartsWith=${input}&orderBy=${\n        !asc ? `-` : ``\n      }${selection}&limit=6&${publicKeyParam}`\n    );\n    console.log(res.data);\n    return res.data.data.results;\n  } catch (err) {\n    return null;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { searchComicsUtil, ComicsData } from \"../api/apiUtils\";\n\ninterface updateComicsData {\n  updateComicsData: (arg: ComicsData[]) => void;\n}\n\nexport const List: React.FC<updateComicsData> = ({ updateComicsData }) => {\n  const [input, setInput] = useState(\"\");\n  const [selection, setSort] = useState(\"title\");\n  const [asc, setAsc] = useState(true);\n  const [data, setData] = useState<ComicsData[]>();\n  let location = useHistory();\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await searchComicsUtil(input, selection, asc);\n      if (res) {\n        setData(res);\n        updateComicsData(res);\n      }\n    };\n    input && getData();\n  }, [input, selection, asc, updateComicsData]);\n\n  const openDetailView = (id: number) => {\n    location.push(`detail/${id}`);\n  };\n\n  return (\n    <div>\n      <form className=\"max-w-7xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"username\"\n          >\n            Comic Search\n          </label>\n          <input\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"w-full md:w-1/2 mb-6 md:mb-0\">\n            <div className=\"relative\">\n              <select\n                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded-l leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-state\"\n                onChange={(e) =>\n                  setSort(\n                    e.target.value === \"Alphabetical\" ? \"title\" : \"onsaleDate\"\n                  )\n                }\n              >\n                <option>Alphabetical</option>\n                <option>On Sale Date</option>\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-full md:w-1/2 mb-6 md:mb-0\">\n            <div className=\"relative\">\n              <select\n                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded-r leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-state\"\n                onChange={(e) =>\n                  setAsc(e.target.value === \"Ascending\" ? true : false)\n                }\n              >\n                <option>Ascending</option>\n                <option>Descending</option>\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      {data && input && (\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Image\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Name\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                On Sale Date\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {data.map((comic, idx) => {\n              return (\n                <tr\n                  key={idx}\n                  className=\"cursor-pointer hover:bg-gray-200\"\n                  onClick={() => openDetailView(comic.id)}\n                >\n                  <td>\n                    <img\n                      src={\n                        comic.thumbnail.path + \".\" + comic.thumbnail.extension\n                      }\n                      alt=\"\"\n                      key={comic.id}\n                      className=\"h-48\"\n                    />\n                  </td>\n                  <td>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {comic.title!!}\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {comic.dates[0].date!!}\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getCharsByComicUtil, ComicsData } from \"../api/apiUtils\";\nimport { Link } from \"react-router-dom\";\nimport { classNames } from \"../App\";\nimport { CircularProgress } from \"@mui/material\";\n\ninterface updateComicsData {\n  updateComicsData: (arg: ComicsData[]) => void;\n}\n\nexport const Gallery: React.FC<updateComicsData> = ({ updateComicsData }) => {\n  const [data, setData] = useState<ComicsData[]>();\n  const [options, setOptions] = useState([\n    { name: \"Thor\", id: \"1009664\", active: false },\n    { name: \"Captain America\", id: \"1009220\", active: false },\n    { name: \"Iron Man\", id: \"1009368\", active: false },\n    { name: \"Avengers\", id: \"1009165\", active: false },\n    { name: \"Spider-Man (Peter Parker)\", id: \"1009610\", active: false },\n    { name: \"Scarlet Witch\", id: \"1009562\", active: false },\n    { name: \"Hulk\", id: \"1009351\", active: false },\n    { name: \"Doctor Strange\", id: \"1009282\", active: false },\n    { name: \"Wolverine\", id: \"1009718\", active: false },\n    { name: \"Black Panther\", id: \"1009187\", active: false },\n    { name: \"Deadpool\", id: \"1009268\", active: false },\n    { name: \"Natasha Romanoff\", id: \"1009547\", active: false },\n    { name: \"Thanos\", id: \"1009652\", active: false },\n    { name: \"Guardians of the Galaxy\", id: \"1011299\", active: false },\n  ]);\n  const [activeSelections, setActiveSelections] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  const updateFieldChanged = (index: number) => {\n    let newArr = [...options]; // copying the old datas array\n    newArr[index].active = !newArr[index].active;\n    setOptions(newArr);\n  };\n\n  useEffect(() => {\n    let activeSelections = new Array<string>();\n    let len = options.length;\n    while (len--) {\n      if (options[len].active) {\n        activeSelections.push(options[len].id);\n      }\n    }\n    options && setActiveSelections(activeSelections);\n  }, [options]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await getCharsByComicUtil(activeSelections);\n      if (res) {\n        setData(res);\n        updateComicsData(res);\n        setLoading(false);\n      }\n    };\n    if (activeSelections && activeSelections.length !== 0) {\n      setLoading(true);\n      getData();\n    }\n  }, [activeSelections, updateComicsData]);\n\n  return (\n    <div>\n      <div className=\"max-w-7xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Find Comics by Character\n        </div>\n        {options.map((option, idx) => {\n          return (\n            <label className=\"flex inline-flex items-center p-1\" key={idx}>\n              <button\n                onClick={() => {\n                  updateFieldChanged(idx);\n                }}\n                className={classNames(\n                  // \"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold \"\n                  // \"hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                  option.active\n                    ? \"bg-blue-500 hover:bg-blue-700 text-white\"\n                    : \"bg-transparent hover:bg-blue-500 text-blue-700 hover:text-white border border-blue-500\",\n                  \" font-semibold py-2 px-4 rounded\"\n                )}\n                aria-current={option.active ? \"page\" : undefined}\n                // className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n              >\n                <span className=\"mx-2\">{option.name}</span>\n              </button>\n            </label>\n          );\n        })}\n        <div className=\"block text-gray-400 text-sm mt-2\">\n          Hint: Selecting multiple characters retrieves shared appearances\n        </div>\n      </div>\n      {loading && (\n        <div style={{ color: \"#3B82F6\", textAlign: \"center\" }}>\n          <CircularProgress className=\"mx-auto\" color=\"inherit\" />\n        </div>\n      )}\n\n      {data && (\n        <div className={\"container grid grid-cols-3 gap-2 mx-auto max-w-7xl\"}>\n          {data.map((comic, idx) => {\n            return (\n              <Link key={comic.id} to={`/marvel-api-app/detail/${comic.id}`}>\n                <img\n                  src={comic.thumbnail.path + \".\" + comic.thumbnail.extension}\n                  alt=\"\"\n                  key={comic.id}\n                />\n              </Link>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nimport { List } from \"./components/List\";\nimport { Gallery } from \"./components/Gallery\";\nimport { ComicsData } from \"./api/apiUtils\";\n\nimport { Disclosure } from \"@headlessui/react\";\nimport {\n  MenuIcon,\n  XIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n} from \"@heroicons/react/outline\";\n\nexport function classNames(...classes: any[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport function App() {\n  const [navigation, setNavigation] = useState([\n    { name: \"Search\", to: \"/marvel-api-app/search\", current: false },\n    { name: \"Gallery\", to: \"/marvel-api-app/gallery\", current: false },\n  ]);\n\n  const updateFieldChanged = (index: number) => {\n    let newArr = [...navigation]; // copying the old datas array\n    let len = newArr.length;\n    while (len--) {\n      newArr[len].current = false;\n    }\n    newArr[index].current = true;\n    setNavigation(newArr);\n  };\n\n  const [data, setData] = useState<ComicsData[]>();\n\n  // using callback here to memoize and store the results of data\n  const updateComicsData = useCallback((data: ComicsData[]): void => {\n    setData(data);\n  }, []);\n\n  return (\n    <div>\n      <Disclosure as=\"nav\" className=\"bg-gray-100\">\n        {({ open }) => (\n          <>\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n              <div className=\"relative flex items-center justify-between h-16\">\n                <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                  {/* Mobile menu button*/}\n                  <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-400 focus:outline-none\">\n                    <span className=\"sr-only\">Open main menu</span>\n                    {open ? (\n                      <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    ) : (\n                      <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                    )}\n                  </Disclosure.Button>\n                </div>\n                {/* <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\"> */}\n                {/* hi */}\n                <div className=\"hidden sm:block sm\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item, idx) => (\n                      <Link\n                        key={item.name}\n                        to={item.to}\n                        onClick={() => updateFieldChanged(idx)}\n                        // highlight\n                        // onClick={()=>}\n                        // href={item.href}\n                        className={classNames(\n                          item.current\n                            ? \"bg-gray-300 text-black\"\n                            : \"text-gray-400 hover:bg-gray-300 hover:text-black\",\n                          \"px-3 py-2 rounded-md text-sm font-medium\"\n                        )}\n                        aria-current={item.current ? \"page\" : undefined}\n                      >\n                        {item.name}\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n            <Disclosure.Panel className=\"sm:hidden\">\n              <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                {navigation.map((item, idx) => (\n                  <Link\n                    key={item.name}\n                    to={item.to}\n                    // highlight\n                    onClick={() => updateFieldChanged(idx)}\n                    // href={item.href}\n                    className={classNames(\n                      item.current\n                        ? \"bg-gray-300 text-black\"\n                        : \"text-gray-400 hover:bg-gray-300 hover:text-black\",\n                      \"px-3 py-2 rounded-md text-sm font-medium\"\n                    )}\n                    aria-current={item.current ? \"page\" : undefined}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n              </div>\n            </Disclosure.Panel>\n          </>\n        )}\n      </Disclosure>\n\n      <Switch>\n        <Route path=\"/marvel-api-app/search\">\n          <List updateComicsData={updateComicsData} />\n        </Route>\n        <Route path=\"/marvel-api-app/gallery\">\n          <Gallery updateComicsData={updateComicsData} />\n        </Route>\n        {data &&\n          data.map((comic, idx) => {\n            const charList = () => {\n              if (comic.characters?.returned) {\n                let charList = new Array<string>();\n                comic.characters.items.map(({ name }) => {\n                  if (name) {\n                    return charList.push(name);\n                  } else {\n                    return null;\n                  }\n                });\n                return charList.toString();\n              } else {\n                return null;\n              }\n            };\n            return (\n              <Route path={`/marvel-api-app/detail/${comic.id}`} key={comic.id}>\n                <h3 className=\"text-lg text-center leading-6 font-medium text-gray-900\">\n                  {comic.title}\n                </h3>\n\n                <div className=\"flex content-center justify-center mt-4 mx-auto\">\n                  <Link\n                    to={`/marvel-api-app/detail/${\n                      data[idx > 0 ? idx - 1 : idx]?.id\n                    }`}\n                    className=\"flex items-center bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l ml-auto\"\n                  >\n                    <ChevronLeftIcon className=\"block h-4 w-4\" />\n                  </Link>\n                  <img\n                    src={comic.thumbnail.path + \".\" + comic.thumbnail.extension}\n                    alt=\"\"\n                    key={comic.id}\n                    className=\"h-1/2\"\n                  />\n                  <Link\n                    to={`/marvel-api-app/detail/${\n                      data[idx < data.length - 1 ? idx + 1 : idx]?.id\n                    }`}\n                    className=\"flex items-center bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r mr-auto\"\n                  >\n                    <ChevronRightIcon className=\"block h-4 w-4\" />\n                  </Link>\n                </div>\n\n                <div className=\"text-left text-md max-w-7xl mx-auto\">\n                  {comic.description}\n                </div>\n                <div>\n                  <h3 className=\"text-lg leading-6 font-medium text-gray-900 my-2 max-w-7xl mx-auto\">\n                    Character List: {charList()}\n                  </h3>\n                </div>\n              </Route>\n            );\n          })}\n\n        <Route path=\"/marvel-api-app/\">\n          <List updateComicsData={updateComicsData} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}