{"version":3,"sources":["api/constants.ts","api/apiUtils.ts","components/List.tsx","components/Gallery.tsx","App.tsx","index.tsx"],"names":["baseURL","publicKeyParam","getCharsByComicUtil","selections","a","charParam","length","axios","get","toString","res","data","results","console","log","searchComicsUtil","input","selection","asc","List","updateComicsData","useState","setInput","setSort","setAsc","setData","navigate","useNavigate","useEffect","getData","className","htmlFor","autoComplete","id","type","onChange","e","target","value","xmlns","viewBox","d","map","comic","idx","onClick","src","thumbnail","path","extension","alt","title","dates","date","Gallery","name","active","options","setOptions","activeSelections","setActiveSelections","loading","setLoading","error","setError","Array","len","push","undefined","option","index","newArr","updateFieldChanged","classNames","aria-current","style","color","textAlign","CircularProgress","to","classes","filter","Boolean","join","App","current","navigation","setNavigation","useCallback","alertUser","preventDefault","window","location","href","addEventListener","removeEventListener","item","pathname","icon","faGithub","size","element","description","characters","returned","charList","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35f98fb1.chunk.js","sourcesContent":["export const baseURL = \"https://gateway.marvel.com\";\nexport const publicKeyParam = \"apikey=f19ff79f771f6dbda0e1367ba52ffd54\";\n","import axios from \"axios\";\nimport { baseURL, publicKeyParam } from \"./constants\";\n\nexport interface ComicsData {\n  id: number;\n  title: string;\n  description: string;\n  pageCount: number;\n  thumbnail: {\n    extension: string;\n    path: string;\n  };\n  characters: {\n    returned: number;\n    items: [{ name: string; role: string }];\n  };\n  modified: string;\n  dates: [{ date: string; type: string }];\n}\n\ninterface ComicsRes {\n  data: {\n    count: number;\n    limit: number;\n    offset: number;\n    results: ComicsData[];\n    total: number;\n  };\n}\n\nexport const getCharsByComicUtil = async (selections: string[]) => {\n  try {\n    let charParam = \"characters\";\n    if (selections.length === 0) {\n      return null;\n    } else if (selections.length > 1) {\n      charParam = \"sharedAppearances\";\n    }\n\n    const res = await axios.get<ComicsRes>(\n      `${baseURL}/v1/public/comics?${charParam}=${selections.toString()}&limit=9&${publicKeyParam}`\n    );\n    return res.data.data.results;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n\nexport const searchComicsUtil = async (\n  input: string,\n  selection: string,\n  asc: boolean\n) => {\n  try {\n    const res = await axios.get<ComicsRes>(\n      `${baseURL}/v1/public/comics?titleStartsWith=${input}&orderBy=${\n        !asc ? `-` : ``\n      }${selection}&limit=6&${publicKeyParam}`\n    );\n    // console.log(res.data);\n    return res.data.data.results;\n  } catch (err) {\n    return null;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { searchComicsUtil, ComicsData } from \"../api/apiUtils\";\n\ninterface updateComicsData {\n  updateComicsData: (arg: ComicsData[]) => void;\n}\n\nexport const List: React.FC<updateComicsData> = ({ updateComicsData }) => {\n  const [input, setInput] = useState(\"\");\n  const [selection, setSort] = useState(\"title\");\n  const [asc, setAsc] = useState(true);\n  const [data, setData] = useState<ComicsData[]>();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await searchComicsUtil(input, selection, asc);\n      if (res) {\n        setData(res);\n        updateComicsData(res);\n      }\n    };\n    input && getData();\n  }, [input, selection, asc, updateComicsData]);\n\n  const openDetailView = (id: number) => {\n    navigate(`/marvel-api-app/detail/${id}`);\n  };\n\n  return (\n    <div>\n      <form className=\"max-w-7xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"username\"\n          >\n            Comic Search\n          </label>\n          <input\n            autoComplete=\"off\"\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"username\"\n            type=\"text\"\n            onChange={(e) => setInput(e.target.value)}\n          />\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"w-full md:w-1/2 mb-6 md:mb-0\">\n            <div className=\"relative\">\n              <select\n                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded-l leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-state\"\n                onChange={(e) =>\n                  setSort(\n                    e.target.value === \"Alphabetical\" ? \"title\" : \"onsaleDate\"\n                  )\n                }\n              >\n                <option>Alphabetical</option>\n                <option>On Sale Date</option>\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n          <div className=\"w-full md:w-1/2 mb-6 md:mb-0\">\n            <div className=\"relative\">\n              <select\n                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded-r leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-state\"\n                onChange={(e) =>\n                  setAsc(e.target.value === \"Ascending\" ? true : false)\n                }\n              >\n                <option>Ascending</option>\n                <option>Descending</option>\n              </select>\n              <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\n                <svg\n                  className=\"fill-current h-4 w-4\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                >\n                  <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n      {data && input && (\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Image\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Name\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                On Sale Date\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {data.map((comic, idx) => {\n              return (\n                <tr\n                  key={idx}\n                  className=\"cursor-pointer hover:bg-gray-200\"\n                  onClick={() => openDetailView(comic.id)}\n                >\n                  <td>\n                    <img\n                      src={\n                        comic.thumbnail.path + \".\" + comic.thumbnail.extension\n                      }\n                      alt=\"\"\n                      key={comic.id}\n                      className=\"h-48\"\n                    />\n                  </td>\n                  <td>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {comic.title!!}\n                    </div>\n                  </td>\n                  <td>\n                    <div className=\"text-sm font-medium text-gray-900\">\n                      {comic.dates[0].date!!}\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { getCharsByComicUtil, ComicsData } from \"../api/apiUtils\";\nimport { Link } from \"react-router-dom\";\nimport { classNames } from \"../App\";\nimport { CircularProgress } from \"@mui/material\";\n\ninterface updateComicsData {\n  updateComicsData: (arg: ComicsData[]) => void;\n}\n\nexport const Gallery: React.FC<updateComicsData> = ({ updateComicsData }) => {\n  const [data, setData] = useState<ComicsData[]>();\n  const [options, setOptions] = useState([\n    { name: \"Thor\", id: \"1009664\", active: false },\n    { name: \"Captain America\", id: \"1009220\", active: false },\n    { name: \"Iron Man\", id: \"1009368\", active: false },\n    { name: \"Avengers\", id: \"1009165\", active: false },\n    { name: \"Spider-Man (Peter Parker)\", id: \"1009610\", active: false },\n    { name: \"Scarlet Witch\", id: \"1009562\", active: false },\n    { name: \"Hulk\", id: \"1009351\", active: false },\n    { name: \"Doctor Strange\", id: \"1009282\", active: false },\n    { name: \"Wolverine\", id: \"1009718\", active: false },\n    { name: \"Black Panther\", id: \"1009187\", active: false },\n    { name: \"Deadpool\", id: \"1009268\", active: false },\n    { name: \"Natasha Romanoff\", id: \"1009547\", active: false },\n    { name: \"Thanos\", id: \"1009652\", active: false },\n    { name: \"Guardians of the Galaxy\", id: \"1011299\", active: false },\n  ]);\n  const [activeSelections, setActiveSelections] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const updateFieldChanged = (index: number) => {\n    let newArr = [...options]; // copying the old datas array\n    newArr[index].active = !newArr[index].active;\n    setOptions(newArr);\n  };\n\n  useEffect(() => {\n    let activeSelections = new Array<string>();\n    let len = options.length;\n    while (len--) {\n      if (options[len].active) {\n        activeSelections.push(options[len].id);\n      }\n    }\n    options && setActiveSelections(activeSelections);\n  }, [options]);\n\n  useEffect(() => {\n    const getData = async () => {\n      const res = await getCharsByComicUtil(activeSelections);\n      console.log(res);\n      if (!res) {\n        setError(\"Internal server error. Try again\");\n        setData(undefined);\n      } else {\n        setData(res);\n        updateComicsData(res);\n        if (res.length === 0) {\n          setError(\"No data returned\");\n        } else {\n          setError(\"\");\n        }\n      }\n      setLoading(false);\n    };\n    if (activeSelections && activeSelections.length !== 0) {\n      setLoading(true);\n      getData();\n    }\n  }, [activeSelections, updateComicsData]);\n\n  return (\n    <div>\n      <div className=\"max-w-7xl mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n        <div className=\"block text-gray-700 text-sm font-bold mb-2\">\n          Find Comics by Character\n        </div>\n        {options.map((option, idx) => {\n          return (\n            <label className=\"flex inline-flex items-center p-1\" key={idx}>\n              <button\n                onClick={() => {\n                  updateFieldChanged(idx);\n                }}\n                className={classNames(\n                  // \"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold \"\n                  // \"hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n                  option.active\n                    ? \"bg-blue-500 hover:bg-blue-700 text-white\"\n                    : \"bg-transparent hover:bg-blue-500 text-blue-700 hover:text-white border border-blue-500\",\n                  \" font-semibold py-2 px-4 rounded\"\n                )}\n                aria-current={option.active ? \"page\" : undefined}\n                // className=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded\"\n              >\n                <span className=\"mx-2\">{option.name}</span>\n              </button>\n            </label>\n          );\n        })}\n        <div className=\"block text-gray-400 text-sm mt-2\">\n          Hint: Selecting multiple characters retrieves shared appearances\n        </div>\n      </div>\n      <div className=\"text-red-500 text-center font-semibold\">{error}</div>\n      {loading && (\n        <div style={{ color: \"#3B82F6\", textAlign: \"center\" }}>\n          <CircularProgress className=\"mx-auto\" color=\"inherit\" />\n        </div>\n      )}\n      {data && (\n        <div className={\"container grid grid-cols-3 gap-2 mx-auto max-w-7xl\"}>\n          {data.map((comic) => {\n            return (\n              <Link\n                key={comic.id}\n                to={`/marvel-api-app/detail/${comic.id}`}\n                className=\"sm:hover:shadow-2xl ease-in-out\"\n              >\n                <img\n                  src={comic.thumbnail.path + \".\" + comic.thumbnail.extension}\n                  alt=\"\"\n                  key={comic.id}\n                />\n              </Link>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { Routes, Route, Link, useNavigate } from \"react-router-dom\";\n\nimport { List } from \"./components/List\";\nimport { Gallery } from \"./components/Gallery\";\nimport { ComicsData } from \"./api/apiUtils\";\n\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nexport function classNames(...classes: any[]) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport function App() {\n  const [navigation, setNavigation] = useState([\n    { name: \"Search\", to: \"/marvel-api-app/search\", current: false },\n    { name: \"Gallery\", to: \"/marvel-api-app/gallery\", current: false },\n  ]);\n\n  const updateFieldChanged = (index: number) => {\n    let newArr = [...navigation]; // copying the old datas array\n    let len = newArr.length;\n    while (len--) {\n      newArr[len].current = false;\n    }\n    newArr[index].current = true;\n    setNavigation(newArr);\n  };\n\n  const [data, setData] = useState<ComicsData[]>();\n\n  // using callback here to memoize and store the results of data\n  const updateComicsData = useCallback((data: ComicsData[]): void => {\n    setData(data);\n  }, []);\n\n  const navigate = useNavigate();\n\n  const alertUser = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      navigate(\"/marvel-api-app/search\");\n      window.location.href = \"/marvel-api-app/search\";\n    },\n    [navigate]\n  );\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", alertUser);\n    return () => {\n      window.removeEventListener(\"beforeunload\", alertUser);\n    };\n  }, [alertUser]);\n\n  return (\n    <div>\n      <nav className=\"bg-gray-100\">\n        <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n          <div className=\"relative flex items-center justify-between h-16\">\n            <div className=\"\">\n              <div className=\"flex space-x-4\">\n                {navigation.map((item, idx) => (\n                  <Link\n                    key={item.name}\n                    to={item.to}\n                    onClick={() => updateFieldChanged(idx)}\n                    className={classNames(\n                      item.current || window.location.pathname === item.to\n                        ? \"bg-gray-300 text-black\"\n                        : \"text-gray-400 hover:bg-gray-300 hover:text-black\",\n                      \"px-3 py-2 rounded-md text-sm font-medium\"\n                    )}\n                    aria-current={item.current ? \"page\" : undefined}\n                  >\n                    {item.name}\n                  </Link>\n                ))}\n              </div>\n            </div>\n            <a href=\"https://github.com/Nathen-Smith/marvel-api-app\">\n              <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n            </a>\n          </div>\n        </div>\n      </nav>\n\n      <Routes>\n        <Route\n          path=\"*\"\n          element={<List updateComicsData={updateComicsData} />}\n        />\n        <Route\n          path=\"/marvel-api-app/search\"\n          element={<List updateComicsData={updateComicsData} />}\n        />\n        <Route\n          path=\"/marvel-api-app/gallery\"\n          element={<Gallery updateComicsData={updateComicsData} />}\n        />\n        {data &&\n          data.map((comic, idx) => {\n            const charList = () => {\n              if (comic.characters?.returned) {\n                let charList = new Array<string>();\n                comic.characters.items.map(({ name }) => {\n                  if (name) {\n                    return charList.push(name);\n                  } else {\n                    return null;\n                  }\n                });\n                return charList.toString();\n              } else {\n                return null;\n              }\n            };\n            return (\n              <Route\n                path={`/marvel-api-app/detail/${comic.id}`}\n                key={comic.id}\n                element={\n                  <div>\n                    <h3 className=\"text-lg text-center leading-6 font-medium text-gray-900\">\n                      {comic.title}\n                    </h3>\n\n                    <div className=\"flex content-center mt-4 mx-auto max-w-7xl\">\n                      <Link\n                        to={`/marvel-api-app/detail/${\n                          data[idx > 0 ? idx - 1 : idx]?.id\n                        }`}\n                        className=\"min-w-0 flex items-center bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l ml-auto\"\n                      >\n                        <ChevronLeftIcon className=\"block h-4 w-4\" />\n                      </Link>\n                      <img\n                        src={\n                          comic.thumbnail.path + \".\" + comic.thumbnail.extension\n                        }\n                        alt=\"\"\n                        key={comic.id}\n                        className=\"min-w-0 h-96 hover:h-52\"\n                      />\n                      <Link\n                        to={`/marvel-api-app/detail/${\n                          data[idx < data.length - 1 ? idx + 1 : idx]?.id\n                        }`}\n                        className=\"min-w-0 flex items-center bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r mr-auto\"\n                      >\n                        <ChevronRightIcon className=\"block h-4 w-4\" />\n                      </Link>\n                    </div>\n\n                    <div className=\"text-left text-md max-w-7xl mx-auto\">\n                      {comic.description}\n                    </div>\n                    <div className=\"text-lg font-medium text-gray-900 my-2 max-w-7xl mx-auto px-5 sm:px-6 lg:px-8\">\n                      Character List: {charList()}\n                    </div>\n                  </div>\n                }\n              />\n            );\n          })}\n      </Routes>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}